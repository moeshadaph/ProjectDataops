# -*- coding: utf-8 -*-
"""tp1

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1qNb02ltR08uWy5he5XE5MKuAzUVh0WRU
"""

import pandas as pd
from google.colab import output, files
import seaborn as sns
import matplotlib.pyplot as plt
from sklearn.model_selection import train_test_split
from sklearn.ensemble import RandomForestClassifier

output.enable_custom_widget_manager()

# Téléchargement du fichier CSV s'il n'existe pas
!if [ ! -f liste_des_prenoms.csv ]; then \
 wget https://opendata.paris.fr/explore/dataset/liste_des_prenoms/download/ -O liste_des_prenoms.csv; \
fi

# Chargement du fichier CSV
uploaded = files.upload()

# Remplacez "nom_du_fichier.csv" par le nom de votre fichier téléchargé
df = pd.read_csv("test.csv")

# Exploration initiale
print(df.head())
print(df.info())

# Exemples de visualisations
sns.countplot(x='Ticket', data=df)  # Remplacez 'variable_cible' par le nom de votre variable cible
plt.show()

# Supprimer les lignes manquantes
df_cleaned = df.dropna()

# Supprimer les colonnes manquantes
df_cleaned = df.dropna(axis=1)

# Exploration initiale
print("Avant le traitement des valeurs manquantes :")
print(df.info())

# Remplacement des valeurs manquantes dans les colonnes numériques par la moyenne
df.fillna(df.mean(numeric_only=True), inplace=True)

# Remplacement des valeurs manquantes dans les colonnes catégorielles par le mode
df.fillna(df.mode().iloc[0], inplace=True)

# Vérification après le traitement
print("\nAprès le traitement des valeurs manquantes :")
print(df.info())

# Visualisation (à titre d'exemple)
plt.figure(figsize=(10, 6))
sns.heatmap(df.isnull(), cbar=False, cmap='viridis')
plt.show()

# Chargement du fichier CSV pour le modèle
df = pd.read_csv("train.csv")

# Exploration initiale
print(df.head())
print(df.info())

# Exemples de visualisations
sns.countplot(x='Age', data=df)  # Remplacez 'variable_cible' par le nom de votre variable cible
plt.show()

# Supprimer les lignes manquantes
df_cleaned = df.dropna()

# Supprimer les colonnes manquantes
df_cleaned = df.dropna(axis=1)

# Remplacement des valeurs manquantes dans les colonnes numériques par la moyenne
df.fillna(df.mean(numeric_only=True), inplace=True)

# Remplacement des valeurs manquantes dans les colonnes catégorielles par le mode
df.fillna(df.mode().iloc[0], inplace=True)

# Vérification après le traitement
print("\nAprès le traitement des valeurs manquantes :")
print(df.info())

# Visualisation (à titre d'exemple)
plt.figure(figsize=(10, 6))
sns.heatmap(df.isnull(), cbar=False, cmap='viridis')
plt.show()

# Définissez les variables explicatives (X) et la variable cible (y)
X = df.drop("Survived", axis=1)
y = df["Survived"]

X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.2, random_state=42)
model = RandomForestClassifier(random_state=42)

# Afficher les types de données de chaque colonne
print(df.dtypes)

# Sélectionner uniquement les colonnes catégorielles
colonnes_categorielles = df.select_dtypes(include=['object']).columns
print("Colonnes catégorielles :", colonnes_categorielles)

# Supposons que 'colonne_categorique' est la colonne catégorielle dans vos données
X = pd.get_dummies(X, columns=['Name', 'Sex', 'Ticket', 'Cabin', 'Embarked'], drop_first=True)
